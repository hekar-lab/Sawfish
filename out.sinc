define token nopInstr16 (16)
	nopSig           = ( 0,15)
;
NOP16:^"NOP" 
	is nopSig=0x0000 {}
define token pgcInstr16 (16)
	pgcSig           = ( 8,15)
	pgcOpc           = ( 4, 7)
	pgcReg           = ( 0, 3)
	pgcRegUImm       = ( 0, 3)
	pgcRegH          = ( 3, 3)
	pgcRegLDReg      = ( 0, 2)
	pgcRegLPReg      = ( 0, 2)
;
ProgCtrl:^"Return" "RTS"
	is pgcSig=0x00 & pgcOpc=0x1 & pgcReg=0x0 
{
	return [RETS];
}
ProgCtrl:^"Return" "RTI"
	is pgcSig=0x00 & pgcOpc=0x1 & pgcReg=0x1 
{
	return [RETI];
}
ProgCtrl:^"Return" "RTX"
	is pgcSig=0x00 & pgcOpc=0x1 & pgcReg=0x2 
{
	return [RETX];
}
ProgCtrl:^"Return" "RTN"
	is pgcSig=0x00 & pgcOpc=0x1 & pgcReg=0x3 
{
	return [RETN];
}
ProgCtrl:^"Return" "RTE"
	is pgcSig=0x00 & pgcOpc=0x1 & pgcReg=0x4 
{
	return [RETE];
}
ProgCtrl:^"Sync" "IDLE"
	is pgcSig=0x00 & pgcOpc=0x2 & pgcReg=0x0 
{
	idle();
}
ProgCtrl:^"Sync" "CSYNC"
	is pgcSig=0x00 & pgcOpc=0x2 & pgcReg=0x3 
{
	csync();
}
ProgCtrl:^"Sync" "SSYNC"
	is pgcSig=0x00 & pgcOpc=0x2 & pgcReg=0x4 
{
	ssync();
}
ProgCtrl:^"Mode" "EMUEXCPT"
	is pgcSig=0x00 & pgcOpc=0x2 & pgcReg=0x5 
{
	emuexcpt();
}
ProgCtrl:^"IMaskMv" "CLI "pgcRegLDReg
	is pgcSig=0x00 & pgcOpc=0x3 & pgcRegH=0x0 & pgcRegLDReg 
{
	local imaskAddr:4 = 0x1FC02104;
	pgcRegLDReg = *[ram]:4 imaskAddr;
	*[ram]:4 imaskAddr = 0x0;
}
ProgCtrl:^"IMaskMv" "STI "pgcRegLDReg
	is pgcSig=0x00 & pgcOpc=0x4 & pgcRegH=0x0 & pgcRegLDReg 
{
	local imaskAddr:4 = 0x1FC02104;
	*[ram]:4 imaskAddr = pgcRegLDReg;
}
ProgCtrl:^"Jump" "JUMP ("pgcRegLPReg")"
	is pgcSig=0x00 & pgcOpc=0x5 & pgcRegH=0x0 & pgcRegLPReg 
{
	goto [pgcRegLPReg];
}
ProgCtrl:^"Jump" "JUMP (PC + "pgcRegLPReg")"
	is pgcSig=0x00 & pgcOpc=0x8 & pgcRegH=0x0 & pgcRegLPReg 
{
	goto [pgcRegLPReg + PC];
}
ProgCtrl:^"Call" "CALL ("pgcRegLPReg")"
	is pgcSig=0x00 & pgcOpc=0x6 & pgcRegH=0x0 & pgcRegLPReg 
{
	RETS = instr_next;
	call [pgcRegLPReg];
}
ProgCtrl:^"Call" "CALL (PC + "pgcRegLPReg")"
	is pgcSig=0x00 & pgcOpc=0x7 & pgcRegH=0x0 & pgcRegLPReg 
{
	RETS = instr_next;
	call [pgcRegLPReg + PC];
}
ProgCtrl:^"Raise" "RAISE "pgcRegUImm
	is pgcSig=0x00 & pgcOpc=0x9 & pgcRegUImm 
{
	raise(pgcRegUImm:1);
}
ProgCtrl:^"Raise" "EXCPT "pgcRegUImm
	is pgcSig=0x00 & pgcOpc=0xa & pgcRegUImm 
{
	excpt(pgcRegUImm:1);
}
ProgCtrl:^"TestSet" "TESTSET ("pgcRegLPReg")"
	is pgcSig=0x00 & pgcOpc=0xb & pgcRegH=0x0 & pgcRegLPReg 
{
	local testVal:1 = *[ram]:1 pgcRegLPReg;
	CC = 0x0;
	if (testVal != 0x0) goto <is_set>;
	CC = 0x1;
<is_set>
	*[ram]:1 pgcRegLPReg = testVal | 0x80;
}
ProgCtrl:^"Sync" "STI IDLE "pgcRegLDReg
	is pgcSig=0x00 & pgcOpc=0xc & pgcRegH=0x0 & pgcRegLDReg 
{
	local imaskAddr:4 = 0x1FC02104;
	*[ram]:4 imaskAddr = pgcRegLDReg;
	idle();
}
define token pprInstr16 (16)
	pprSig           = ( 7,15)
	pprW             = ( 6, 6)
	pprGrp           = ( 3, 5)
	pprReg           = ( 0, 2)
	pprRegDReg       = ( 0, 2)
	pprRegPReg       = ( 0, 2)
	pprRegSyRg2      = ( 0, 2)
	pprRegSyRg3      = ( 0, 2)
	pprRegH          = ( 2, 2)
	pprRegLIReg      = ( 0, 1)
	pprRegLMReg      = ( 0, 1)
	pprRegLBReg      = ( 0, 1)
	pprRegLLReg      = ( 0, 1)
;
PushPopReg:^"Pop" pprRegDReg" = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x0 & pprRegDReg 
{
	pprRegDReg:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = "pprRegDReg
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x0 & pprRegDReg 
{
	SP = SP - 0x4;
	*[ram]:4 SP = pprRegDReg:4;
}
PushPopReg:^"Pop" pprRegPReg" = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x1 & pprRegPReg 
{
	pprRegPReg:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = "pprRegPReg
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x1 & pprRegPReg 
{
	SP = SP - 0x4;
	*[ram]:4 SP = pprRegPReg:4;
}
PushPopReg:^"Pop" pprRegLIReg" = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x2 & pprRegH=0x0 & pprRegLIReg 
{
	pprRegLIReg:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = "pprRegLIReg
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x2 & pprRegH=0x0 & pprRegLIReg 
{
	SP = SP - 0x4;
	*[ram]:4 SP = pprRegLIReg:4;
}
PushPopReg:^"Pop" pprRegLMReg" = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x2 & pprRegH=0x1 & pprRegLMReg 
{
	pprRegLMReg:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = "pprRegLMReg
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x2 & pprRegH=0x1 & pprRegLMReg 
{
	SP = SP - 0x4;
	*[ram]:4 SP = pprRegLMReg:4;
}
PushPopReg:^"Pop" pprRegLBReg" = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x3 & pprRegH=0x0 & pprRegLBReg 
{
	pprRegLBReg:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = "pprRegLBReg
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x3 & pprRegH=0x0 & pprRegLBReg 
{
	SP = SP - 0x4;
	*[ram]:4 SP = pprRegLBReg:4;
}
PushPopReg:^"Pop" pprRegLLReg" = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x3 & pprRegH=0x1 & pprRegLLReg 
{
	pprRegLLReg:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = "pprRegLLReg
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x3 & pprRegH=0x1 & pprRegLLReg 
{
	SP = SP - 0x4;
	*[ram]:4 SP = pprRegLLReg:4;
}
PushPopReg:^"Pop" "A0.X = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x4 & pprReg=0x0 
{
	A0.X:1 = *[ram]:1 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = A0.X"
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x4 & pprReg=0x0 
{
	SP = SP - 0x4;
	*[ram]:1 SP = A0.X:1;
}
PushPopReg:^"Pop" "A0.W = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x4 & pprReg=0x1 
{
	A0.W:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = A0.W"
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x4 & pprReg=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = A0.W:4;
}
PushPopReg:^"Pop" "A1.X = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x4 & pprReg=0x2 
{
	A1.X:1 = *[ram]:1 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = A1.X"
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x4 & pprReg=0x2 
{
	SP = SP - 0x4;
	*[ram]:1 SP = A1.X:1;
}
PushPopReg:^"Pop" "A1.W = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x4 & pprReg=0x3 
{
	A1.W:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = A1.W"
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x4 & pprReg=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = A1.W:4;
}
PushPopReg:^"Pop" "ASTAT = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x4 & pprReg=0x6 
{
	ASTAT:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = ASTAT"
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x4 & pprReg=0x6 
{
	SP = SP - 0x4;
	*[ram]:4 SP = ASTAT:4;
}
PushPopReg:^"Pop" "RETS = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x4 & pprReg=0x7 
{
	RETS:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = RETS"
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x4 & pprReg=0x7 
{
	SP = SP - 0x4;
	*[ram]:4 SP = RETS:4;
}
PushPopReg:^"Pop" pprRegSyRg2" = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x6 & pprRegSyRg2 
{
	pprRegSyRg2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = "pprRegSyRg2
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x6 & pprRegSyRg2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = pprRegSyRg2:4;
}
PushPopReg:^"Pop" pprRegSyRg3" = [SP++]"
	is pprSig=0x002 & pprW=0x0 & pprGrp=0x7 & pprRegSyRg3 
{
	pprRegSyRg3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopReg:^"Push" "[--SP] = "pprRegSyRg3
	is pprSig=0x002 & pprW=0x1 & pprGrp=0x7 & pprRegSyRg3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = pprRegSyRg3:4;
}
define token c2dInstr16 (16)
	c2dSig           = ( 5,15)
	c2dOpc           = ( 3, 4)
	c2dRegDReg       = ( 0, 2)
;
CC2Dreg:^"CCToDreg" c2dRegDReg" = CC"
	is c2dSig=0x010 & c2dOpc=0x0 & c2dRegDReg 
{
	c2dRegDReg = zext(CC);
}
CC2Dreg:^"MvToCC" "CC = "c2dRegDReg
	is c2dSig=0x010 & c2dOpc=0x1 & c2dRegDReg 
{
	CC = c2dRegDReg != 0x0;
}
CC2Dreg:^"CCToDreg" c2dRegDReg" = !CC"
	is c2dSig=0x010 & c2dOpc=0x2 & c2dRegDReg 
{
	c2dRegDReg = zext(!CC);
}
CC2Dreg:^"MvToCC" "CC = !CC"
	is c2dSig=0x010 & c2dOpc=0x3 
{
	CC = !CC;
}
define token c2dInstr16 (16)
	c2dSig           = ( 6,15)
	c2dA             = ( 5, 5)
	c2dOpc           = ( 3, 4)
	c2dRegPReg       = ( 0, 2)
;
CC2Dreg:^"CacheCtrl" "PREFETCH ["c2dRegPReg"]"
	is c2dSig=0x009 & c2dA=0x0 & c2dOpc=0x0 & c2dRegPReg 
{
	prefetch(c2dRegPReg);
}
CC2Dreg:^"CacheCtrl" "PREFETCH ["c2dRegPReg"++]"
	is c2dSig=0x009 & c2dA=0x1 & c2dOpc=0x0 & c2dRegPReg 
{
	prefetch(c2dRegPReg);
	c2dRegPReg = c2dRegPReg + 0x20;
}
CC2Dreg:^"CacheCtrl" "FLUSHINV ["c2dRegPReg"]"
	is c2dSig=0x009 & c2dA=0x0 & c2dOpc=0x1 & c2dRegPReg 
{
	flushinv(c2dRegPReg);
}
CC2Dreg:^"CacheCtrl" "FLUSHINV ["c2dRegPReg"++]"
	is c2dSig=0x009 & c2dA=0x1 & c2dOpc=0x1 & c2dRegPReg 
{
	flushinv(c2dRegPReg);
	c2dRegPReg = c2dRegPReg + 0x20;
}
CC2Dreg:^"CacheCtrl" "FLUSH ["c2dRegPReg"]"
	is c2dSig=0x009 & c2dA=0x0 & c2dOpc=0x2 & c2dRegPReg 
{
	flush(c2dRegPReg);
}
CC2Dreg:^"CacheCtrl" "FLUSH ["c2dRegPReg"++]"
	is c2dSig=0x009 & c2dA=0x1 & c2dOpc=0x2 & c2dRegPReg 
{
	flush(c2dRegPReg);
	c2dRegPReg = c2dRegPReg + 0x20;
}
CC2Dreg:^"CacheCtrl" "IFLUSH ["c2dRegPReg"]"
	is c2dSig=0x009 & c2dA=0x0 & c2dOpc=0x3 & c2dRegPReg 
{
	iflush(c2dRegPReg);
}
CC2Dreg:^"CacheCtrl" "IFLUSH ["c2dRegPReg"++]"
	is c2dSig=0x009 & c2dA=0x1 & c2dOpc=0x3 & c2dRegPReg 
{
	iflush(c2dRegPReg);
	c2dRegPReg = c2dRegPReg + 0x20;
}
define token ccsInstr16 (16)
	ccsSig           = ( 8,15)
	ccsD             = ( 7, 7)
	ccsOp            = ( 5, 6)
	ccsCbitUImm      = ( 0, 4)
;
CC2Stat:^"MvToCC_STAT" "CC = "ccsCbitUImm
	is ccsSig=0x03 & ccsD=0x0 & ccsOp=0x0 & ccsCbitUImm 
{
	CC = (ASTAT >> ccsCbitUImm):1 & 0x1;
}
CC2Stat:^"MvToCC_STAT" "CC |= "ccsCbitUImm
	is ccsSig=0x03 & ccsD=0x0 & ccsOp=0x1 & ccsCbitUImm 
{
	CC = CC || ((ASTAT >> ccsCbitUImm):1 & 0x1);
}
CC2Stat:^"MvToCC_STAT" "CC &= "ccsCbitUImm
	is ccsSig=0x03 & ccsD=0x0 & ccsOp=0x2 & ccsCbitUImm 
{
	CC = CC && ((ASTAT >> ccsCbitUImm):1 & 0x1);
}
CC2Stat:^"MvToCC_STAT" "CC ^= "ccsCbitUImm
	is ccsSig=0x03 & ccsD=0x0 & ccsOp=0x3 & ccsCbitUImm 
{
	CC = CC ^^ ((ASTAT >> ccsCbitUImm):1 & 0x1);
}
CC2Stat:^"CCToStat16" ccsCbitUImm" = CC"
	is ccsSig=0x03 & ccsD=0x1 & ccsOp=0x0 & ccsCbitUImm 
{
	ASTAT = (ASTAT & ~(0x1 << ccsCbitUImm)) | (zext(CC) << ccsCbitUImm);
}
CC2Stat:^"CCToStat16" ccsCbitUImm" |= CC"
	is ccsSig=0x03 & ccsD=0x1 & ccsOp=0x1 & ccsCbitUImm 
{
	ASTAT = ASTAT | (zext(CC) << ccsCbitUImm);
}
CC2Stat:^"CCToStat16" ccsCbitUImm" &= CC"
	is ccsSig=0x03 & ccsD=0x1 & ccsOp=0x2 & ccsCbitUImm 
{
	ASTAT = ASTAT & ~(zext(CC) << ccsCbitUImm);
}
CC2Stat:^"CCToStat16" ccsCbitUImm" ^= CC"
	is ccsSig=0x03 & ccsD=0x1 & ccsOp=0x3 & ccsCbitUImm 
{
	ASTAT = ASTAT ^ (zext(CC) << ccsCbitUImm);
}
define token ppmInstr16 (16)
	ppmSig           = ( 9,15)
	ppmD             = ( 8, 8)
	ppmP             = ( 7, 7)
	ppmW             = ( 6, 6)
	ppmDr            = ( 3, 5)
	ppmPr            = ( 0, 2)
;
PushPopMult:^"PushPopMul16" "[--SP] = (R7:0)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
}
PushPopMult:^"PushPopMul16" "(R7:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x0 
{
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:1)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
}
PushPopMult:^"PushPopMul16" "(R7:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x1 
{
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:2)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
}
PushPopMult:^"PushPopMul16" "(R7:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x2 
{
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:3)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
}
PushPopMult:^"PushPopMul16" "(R7:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x3 
{
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:4)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
}
PushPopMult:^"PushPopMul16" "(R7:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x4 
{
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:5)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
}
PushPopMult:^"PushPopMul16" "(R7:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x5 
{
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:6)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x6 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
}
PushPopMult:^"PushPopMul16" "(R7:6) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x6 
{
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:7)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x7 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
}
PushPopMult:^"PushPopMul16" "(R7:7) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x7 
{
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (P5:0)"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(P5:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x0 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (P5:1)"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(P5:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x1 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (P5:2)"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(P5:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x2 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (P5:3)"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(P5:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x3 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (P5:4)"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(P5:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x4 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (P5:5)"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(P5:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x5 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:0, P5:0)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:0, P5:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x0 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:0, P5:1)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:0, P5:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x1 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:0, P5:2)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:0, P5:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x2 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:0, P5:3)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:0, P5:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x3 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:0, P5:4)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:0, P5:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x4 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:0, P5:5)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:0, P5:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x5 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:1, P5:0)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:1, P5:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x0 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:1, P5:1)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:1, P5:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x1 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:1, P5:2)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:1, P5:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x2 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:1, P5:3)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:1, P5:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x3 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:1, P5:4)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:1, P5:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x4 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:1, P5:5)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:1, P5:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x5 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:2, P5:0)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:2, P5:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x0 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:2, P5:1)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:2, P5:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x1 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:2, P5:2)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:2, P5:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x2 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:2, P5:3)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:2, P5:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x3 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:2, P5:4)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:2, P5:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x4 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:2, P5:5)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:2, P5:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x5 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:3, P5:0)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:3, P5:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x0 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:3, P5:1)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:3, P5:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x1 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:3, P5:2)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:3, P5:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x2 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:3, P5:3)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:3, P5:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x3 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:3, P5:4)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:3, P5:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x4 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:3, P5:5)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:3, P5:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x5 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:4, P5:0)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:4, P5:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x0 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:4, P5:1)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:4, P5:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x1 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:4, P5:2)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:4, P5:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x2 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:4, P5:3)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:4, P5:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x3 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:4, P5:4)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:4, P5:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x4 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:4, P5:5)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:4, P5:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x5 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:5, P5:0)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:5, P5:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x0 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:5, P5:1)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:5, P5:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x1 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:5, P5:2)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:5, P5:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x2 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:5, P5:3)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:5, P5:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x3 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:5, P5:4)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:5, P5:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x4 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:5, P5:5)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:5, P5:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x5 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:6, P5:0)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:6, P5:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x0 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:6, P5:1)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:6, P5:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x1 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:6, P5:2)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:6, P5:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x2 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:6, P5:3)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:6, P5:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x3 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:6, P5:4)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:6, P5:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x4 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:6, P5:5)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6:4;
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:6, P5:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x5 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:7, P5:0)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P0:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:7, P5:0) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x0 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:7, P5:1)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P1:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:7, P5:1) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x1 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:7, P5:2)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P2:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:7, P5:2) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x2 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:7, P5:3)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P3:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:7, P5:3) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x3 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:7, P5:4)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P4:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:7, P5:4) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x4 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
PushPopMult:^"PushPopMul16" "[--SP] = (R7:7, P5:5)"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7:4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5:4;
}
PushPopMult:^"PushPopMul16" "(R7:7, P5:5) = [SP++]"
	is ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x5 
{
	P5:4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7:4 = *[ram]:4 SP;
	SP = SP + 0x4;
}
define token cmvInstr16 (16)
	cmvSig           = ( 9,15)
	cmvT             = ( 8, 8)
	cmvD             = ( 7, 7)
	cmvS             = ( 6, 6)
	cmvDstDReg       = ( 3, 5)
	cmvDstPReg       = ( 3, 5)
	cmvSrcDReg       = ( 0, 2)
	cmvSrcPReg       = ( 0, 2)
;
CCMV:^"MvRegToRegCond" "if !CC "cmvDstDReg" = "cmvSrcDReg
	is cmvSig=0x03 & cmvT=0x0 & cmvD=0x0 & cmvS=0x0 & cmvDstDReg & cmvSrcDReg 
{
	if (CC) goto <do_nothing>;
	cmvDstDReg = cmvSrcDReg;
<do_nothing>
}
CCMV:^"MvRegToRegCond" "if !CC "cmvDstPReg" = "cmvSrcDReg
	is cmvSig=0x03 & cmvT=0x0 & cmvD=0x0 & cmvS=0x1 & cmvDstPReg & cmvSrcDReg 
{
	if (CC) goto <do_nothing>;
	cmvDstPReg = cmvSrcDReg;
<do_nothing>
}
CCMV:^"MvRegToRegCond" "if !CC "cmvDstDReg" = "cmvSrcPReg
	is cmvSig=0x03 & cmvT=0x0 & cmvD=0x1 & cmvS=0x0 & cmvDstDReg & cmvSrcPReg 
{
	if (CC) goto <do_nothing>;
	cmvDstDReg = cmvSrcPReg;
<do_nothing>
}
CCMV:^"MvRegToRegCond" "if !CC "cmvDstPReg" = "cmvSrcPReg
	is cmvSig=0x03 & cmvT=0x0 & cmvD=0x1 & cmvS=0x1 & cmvDstPReg & cmvSrcPReg 
{
	if (CC) goto <do_nothing>;
	cmvDstPReg = cmvSrcPReg;
<do_nothing>
}
CCMV:^"MvRegToRegCond" "if CC "cmvDstDReg" = "cmvSrcDReg
	is cmvSig=0x03 & cmvT=0x1 & cmvD=0x0 & cmvS=0x0 & cmvDstDReg & cmvSrcDReg 
{
	if (!CC) goto <do_nothing>;
	cmvDstDReg = cmvSrcDReg;
<do_nothing>
}
CCMV:^"MvRegToRegCond" "if CC "cmvDstPReg" = "cmvSrcDReg
	is cmvSig=0x03 & cmvT=0x1 & cmvD=0x0 & cmvS=0x1 & cmvDstPReg & cmvSrcDReg 
{
	if (!CC) goto <do_nothing>;
	cmvDstPReg = cmvSrcDReg;
<do_nothing>
}
CCMV:^"MvRegToRegCond" "if CC "cmvDstDReg" = "cmvSrcPReg
	is cmvSig=0x03 & cmvT=0x1 & cmvD=0x1 & cmvS=0x0 & cmvDstDReg & cmvSrcPReg 
{
	if (!CC) goto <do_nothing>;
	cmvDstDReg = cmvSrcPReg;
<do_nothing>
}
CCMV:^"MvRegToRegCond" "if CC "cmvDstPReg" = "cmvSrcPReg
	is cmvSig=0x03 & cmvT=0x1 & cmvD=0x1 & cmvS=0x1 & cmvDstPReg & cmvSrcPReg 
{
	if (!CC) goto <do_nothing>;
	cmvDstPReg = cmvSrcPReg;
<do_nothing>
}

